openapi: 3.0.3
info:
  title: Culture Rails API
  description: Rails 8 認証システムAPI - User/UserCredential分離設計
  version: 1.0.0
  contact:
    name: Culture Rails チーム

servers:
  - url: http://localhost:3000/api/v1
    description: 開発サーバー

# Authentication API endpoints
paths:
  /users:
    post:
      summary: ユーザー登録
      tags: [認証]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user:
                  type: object
                  properties:
                    email_address:
                      type: string
                      format: email
                      example: "user@example.com"
                    password:
                      type: string
                      minLength: 6
                      example: "password123"
                    password_confirmation:
                      type: string
                      minLength: 6
                      example: "password123"
                  required: [email_address, password, password_confirmation]
              required: [user]
      responses:
        "201":
          description: User registered successfully
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    additionalProperties: false
                    properties:
                      user:
                        type: object
                        additionalProperties: false
                        properties:
                          id:
                            type: integer
                            example: 1
                          human_id:
                            type: string
                            example: "abc123def456"
                            description: "外部参照用の一意識別子"
                          email_address:
                            type: string
                            format: email
                            example: "user@example.com"
                          authenticated:
                            type: boolean
                            example: true
                        required: [id, human_id, email_address, authenticated]
                    required: [user]
                required: [success, data]
        "422":
          description: Validation error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationError"

  /ping:
    get:
      summary: 疎通テスト用Ping API
      description: APIの疎通確認用エンドポイント
      tags: [疎通テスト]
      responses:
        "200":
          description: 正常応答
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    additionalProperties: false
                    properties:
                      id:
                        type: integer
                        example: 1
                      message:
                        type: string
                        example: "pong"
                required:
                  - success
                  - data
        "404":
          description: リソースが見つからない場合
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  success:
                    type: boolean
                    example: false
                  error:
                    type: string
                    example: "not_found"
                  message:
                    type: string
                    example: "リソースが見つかりません"
                required:
                  - success
                  - error
                  - message
        "500":
          description: サーバーエラー
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  success:
                    type: boolean
                    example: false
                  error:
                    type: string
                    example: "internal_server_error"
                  message:
                    type: string
                    example: "予期せぬエラーが発生しました"
                required:
                  - success
                  - error
                  - message
    post:
      summary: 疎通テスト用Ping API（POST）
      description: 疎通テスト用のPOSTエンドポイント。任意のメッセージを送信して確認できる。
      tags: [疎通テスト]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              additionalProperties: false
              properties:
                message:
                  type: string
                  example: "hello ping"
              required:
                - message
      responses:
        "201":
          description: 正常応答（作成）
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    additionalProperties: false
                    properties:
                      id:
                        type: integer
                        example: 2
                      message:
                        type: string
                        example: "hello ping"
                required:
                  - success
                  - data
        "404":
          description: リソースが見つからない場合
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  success:
                    type: boolean
                    example: false
                  error:
                    type: string
                    example: "not_found"
                  message:
                    type: string
                    example: "リソースが見つかりません"
                required:
                  - success
                  - error
                  - message
        "500":
          description: サーバーエラー
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  success:
                    type: boolean
                    example: false
                  error:
                    type: string
                    example: "internal_server_error"
                  message:
                    type: string
                    example: "予期せぬエラーが発生しました"
                required:
                  - success
                  - error
                  - message

  /users:
    get:
      summary: ユーザー詳細取得
      description: 現在ログイン中のユーザー情報を取得
      tags: [認証]
      responses:
        "200":
          description: ユーザー情報取得成功
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    additionalProperties: false
                    properties:
                      id:
                        type: integer
                        example: 1
                      human_id:
                        type: string
                        example: "abc123def456"
                      email_address:
                        type: string
                        format: email
                        example: "user@example.com"
                      authenticated:
                        type: boolean
                        example: true
                    required: [id, human_id, email_address, authenticated]
                required: [success, data]
        "401":
          description: 認証が必要です
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  success:
                    type: boolean
                    example: false
                  error:
                    type: string
                    example: "authentication_required"
                  message:
                    type: string
                    example: "ログインが必要です"
                required: [success, error, message]

  /session:
    post:
      summary: ユーザーログイン
      description: メールアドレスとパスワードでログイン
      tags: [認証]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              additionalProperties: false
              properties:
                email_address:
                  type: string
                  format: email
                  example: "user@example.com"
                password:
                  type: string
                  example: "password123"
              required: [email_address, password]
      responses:
        "200":
          description: ログイン成功
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    additionalProperties: false
                    properties:
                      user:
                        type: object
                        additionalProperties: false
                        properties:
                          id:
                            type: integer
                            example: 1
                          human_id:
                            type: string
                            example: "abc123def456"
                          email_address:
                            type: string
                            format: email
                            example: "user@example.com"
                          authenticated:
                            type: boolean
                            example: true
                        required: [id, human_id, email_address, authenticated]
                    required: [user]
                required: [success, data]
        "401":
          description: ログイン失敗
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  success:
                    type: boolean
                    example: false
                  error:
                    type: string
                    example: "invalid_credentials"
                  message:
                    type: string
                    example: "ログイン情報が正しくありません"
                required: [success, error, message]

    get:
      summary: セッション確認
      description: 現在のログイン状態を確認
      tags: [認証]
      responses:
        "200":
          description: セッション状態取得成功
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  success:
                    type: boolean
                    example: true
                  authenticated:
                    type: boolean
                    example: true
                  user:
                    type: object
                    additionalProperties: false
                    properties:
                      id:
                        type: integer
                        example: 1
                      human_id:
                        type: string
                        example: "abc123def456"
                      email_address:
                        type: string
                        format: email
                        example: "user@example.com"
                      authenticated:
                        type: boolean
                        example: true
                    required: [id, human_id, email_address, authenticated]
                    nullable: true
                required: [success, authenticated, user]

    delete:
      summary: ユーザーログアウト
      description: 現在のセッションを終了
      tags: [認証]
      responses:
        "200":
          description: ログアウト成功
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "ログアウトしました"
                required: [success, message]

components:
  schemas:
    # Common Error Types
    ValidationError:
      type: object
      additionalProperties: false
      properties:
        success:
          type: boolean
          example: false
        errors:
          type: array
          items:
            type: string
          example: ["パスワードは6文字以上で入力してください"]
      required: [success, errors]
